CREATE SCHEMA vinay_collection;
SET search_path = vinay_collection;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');

--QUESTIONS & SOLUTIONS:
--1. What is the total amount each customer spent at the restaurant? 

select t1.customer_id,sum(t2.price) as "Total" from 
sales as t1 Join menu as t2 
on t1.product_id = t2.product_id
group by t1.customer_id
order by "Total" desc;


-- 2. How many days has each customer visited the restaurant? 

select customer_id, count(distinct order_date) as "days" from sales 
group by customer_id order by "days" desc;


-- 3. What was the first item from the menu purchased by each customer?

select distinct t1.customer_id, 
(with p1 as (select t2.product_id from sales t2 where t2.customer_id = t1.customer_id 
 order by t2.order_date limit 1)
 select t2.product_name from p1 as t1
 join menu as t2 
 on t1.product_id = t2.product_id)
from sales as t1;
 
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

with purchased_items as ( 
	Select t1.customer_id,t1.order_date,t2.product_name,t2.price 
	 from sales as t1 
	 join menu as t2 on t1.product_id = t2.product_id
 	order by t1.customer_id),
--4 a) Most purchased item
temp1 as (select product_name,count(product_name) from purchased_items 
			   group by product_name order by count(product_name) desc limit 1)	

--4 b) How many times it was ordered
select customer_id,count(product_name) from purchased_items where 
	product_name = (select product_name from temp1)
	group by customer_id;
--4 Combined
with purchased_items as ( 
	Select t1.customer_id,t1.order_date,t2.product_name,t2.price 
	 from sales as t1 
	 join menu as t2 on t1.product_id = t2.product_id
 	order by t1.customer_id),
	temp1 as (select product_name,count(product_name) from purchased_items 
			   group by product_name order by count(product_name) desc limit 1)
	select customer_id,count(product_name) from purchased_items where 
	product_name = (select product_name from temp1)
	group by customer_id;


-- 5. Which item was the most popular for each customer?

with popular_item as
(select customer_id,product_name,
rank() over(Partition by customer_id order by count(*)) as rnk
from purchased_items group by customer_id,product_name)
select customer_id,product_name from popular_item where rnk = 1;


-- 6. Which item was purchased first by the customer after they became a member?

with first_table as (select t1.customer_id,(t1.order_date-t2.join_date) as diff,
t1.product_name 
from purchased_items as t1 
join members as t2 
on 
t1.customer_id = t2.customer_id where t1.order_date-t2.join_date >=0),
second_table as (select customer_id,min(diff) as diff from first_table group by customer_id)

select t1.customer_id,t2.product_name 
from second_table as t1 join first_table as t2
on t1.customer_id = t2.customer_id and t1.diff = t2.diff;


-- 7. Which item was purchased just before the customer became a member?

with table1 as (select t1.customer_id,min(abs(t1.order_date-t2.join_date)) as diff 
from purchased_items as t1 
join members as t2 
on 
t1.customer_id = t2.customer_id where t1.order_date-t2.join_date < 0
group by t1.customer_id),
table2 as (
	select t1.customer_id,abs(t1.order_date-t2.join_date) as diff,
	t1.product_name
	from purchased_items as t1 
	join members as t2 
	on 
	t1.customer_id = t2.customer_id where t1.order_date-t2.join_date < 0)
select  t1.customer_id, t2.product_name 
from table1 as t1 left join table2 as t2
on t1.customer_id = t2.customer_id and t1.diff = t2.diff;

-- 8. What is the total items and amount spent for each member before they became a member?

select t1.customer_id,
	count(t1.product_name) as Total_items,
	sum(t1.price) as Total_amount
from purchased_items as t1 
join members as t2 
on 
t1.customer_id = t2.customer_id where t1.order_date-t2.join_date < 0
group by t1.customer_id;

	
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

with table1 as (select t1.customer_id,
	case
		when t1.product_name = 'sushi' then t1.price*20
		else t1.price*10
	end as Points
from purchased_items as t1)
select customer_id,sum(points) as points 
from table1 group by customer_id 
order by sum(points) desc;



/* 10. In the first week after a customer joins the program (including their join date) they 
earn 2x points on all items, not just sushi - how many points do customer A and B have at the end 
of January? */

with table1 as (
select t1.customer_id,
	case
	when t1.product_name = 'sushi' then t1.price*20
	when t1.product_name != 'sushi' and t1.order_date-t2.join_date >= 0 
	and t1.order_date-t2.join_date < 7 then t1.price*20
	else t1.price*10
	end as points
	from purchased_items as t1 
	join members as t2 
	on 
	t1.customer_id = t2.customer_id)
	select customer_id,sum(points) as points 
from table1 group by customer_id 
order by sum(points) desc;

